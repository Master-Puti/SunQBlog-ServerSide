{"_id":{"$oid":"5bbdd9aeeef35d22ec0cf87c"},"Title":"关于本博客","Summary":"小博客的基本介绍","Content":"\u003cp\u003e作为一个前端程序猿一直有一个愿望，就是拥有一个自己的小网站。经过好几个周末的摸索，终于有了这个雏形。\u003c/p\u003e\n\n### 网站组成\n\n\u003cp\u003e这个博客由用户端，管理端，服务端组成。详细如下：\u003cbr\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e用户端：自己UI组件 + vue.js\u003c/p\u003e\n\u003cp\u003e管理端：ElementUI + vue.js\u003c/p\u003e\n\u003cp\u003e服务端：node.js + express + Mongodb\u003c/p\u003e\n\u003cp\u003e服务器：腾讯云服务器\u003cbr\u003e\u003c/p\u003e\n\u003cp\u003e代码托管：github https://github.com/SunQQQ\u003cbr\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\n### 管理端预览\n![Articlelist.png](http://www.sunq.xyz:8888/Articlelist.png)\n![CreateArticle.png](http://www.sunq.xyz:8888/CreateArticle.png)\n![EditTag.png](http://www.sunq.xyz:8888/EditTag.png)\n![Taglist.png](http://www.sunq.xyz:8888/Taglist.png)\n\n### 关于优化！\n\u003cp\u003e当然她还没有什么功能，样式细节也处理的不好。但是万事开头难，我已经开了一个头了。接下来我会找时间持续更新的，持续维护这个小火苗。\u003c/p\u003e\n\u003cp\u003e如果你也对个人博客感兴趣，欢迎你来讨论技术，也欢迎你在此博客github下创建一个分支，一块搞事情！\u003c/p\u003e\u003cbr\u003e\u003cp\u003e\u0026nbsp;\u003cstrong\u003e\u003c/strong\u003e\u003c/p\u003e","CreateDate":"2018-10-15","ArticleTag":"技术笔记","Token":"eyJkYXRhIjp7fSwiY3JlYXRlZCI6MTUzOTE2ODM5MCwiZXhwIjozNjAwfQ==.sVAJWe8zHIlx7KR7rgt8x8llAQvZz7fwwD8gXZnlQ50=","ArticleCover":"http://www.sunq.xyz:8888/sunqblog2.jpg","CommentNum":2}
{"_id":{"$oid":"5bd59bfcb3686b0f004644a7"},"Title":"关于人生","Summary":"哈哈，自己关于人生的一点小领悟吧","Content":"###### 2018-10-28 上海\n\u003cp\u003e虽然本人是个理科男，但有时也会想人生到底是什么？\u003c/p\u003e\n\u003cp\u003e说来挺不好意思，我已经过了两个本命年了，毕业也一年半了。熬过了刚毕业时的懵懂迷茫、年少轻狂、急功近利、充满梦想。本以为将会不再迷茫，可谁想到在一段时间的规律生活后，还是会恍恍惚惚觉得生活好没意思，什么事情都不想干。\u003c/p\u003e\n\u003cp\u003e经过这一两年的社会经历，慢慢的才觉得生活本来就是无聊的、缓慢的、流逝的。年轻时总觉得不该让生活平平淡淡、一潭死水，就应该折腾点波澜出来。现在才发现可能所有人的人生都是这样，大部分时间都是孤独的、寂静无声的。\u003c/p\u003e\n\u003cp\u003e虽然现在我也深知独处时间的合理安排会使人生有很大不同，也会试着在独处时间里做一些积累性的东西。比如学习了、读书了、培养兴趣爱好等。可还是不能很好的控制住自己，不虚度这些自由的时间。经常在无人约束的时间里打游戏、刷视频来空耗掉生命，待时间流过更加空虚和后悔。\u003c/p\u003e\n\n###### 2018-11-21 上海\n\u003cp\u003e今天分手6天啦，午休起来心里空落落的，难受。今天祝小皮没有理我呀，虽然这是我想要的结果的。可是还是会想她联系我啊，好吧本矫情鬼就是这么矛盾。上网看下郑州今天的天气，她今天休息跟闺蜜去逛街了，希望她玩滴开心。天气下面刚好有张郑州二七塔的图片，挖槽，眼眶瞬间就满了。我俩夏天还在图片那张长椅坐着呀，那个小傻子躺在椅子上，把头放我腿上碎碎念呀。。。\u003c/p\u003e\n\n###### 2018-11-30 上海\n这人呀，分手后最怕梦醒时分。梦里太真实，现实太冷酷，落差太扎心！","CreateDate":"2018-10-28T11:04:43.484Z","ArticleTag":"成长感悟","ArticleCover":"http://www.sunq.xyz:8888/mylife.jpg","Token":"eyJkYXRhIjp7fSwiY3JlYXRlZCI6MTU0MDcyNDUyNSwiZXhwIjozNjAwfQ==.9q+oFOnSBgIUkAyUHqe6Hob1FNT06dcemAWtdyRsuEw=","CommentNum":2}
{"_id":{"$oid":"5bd9624b00010812a8a0a451"},"Title":"OPTIONS请求","Summary":"自定义请求会引起OPTIONS请求，又叫预请求，需要在服务器端设置响应头。","Content":"\u003cp\u003e有时我们在浏览器中发现发送的ajax请求自动请求两次，第一次是options请求，第二次才是你自己发送的get或post请求。\u003c/p\u003e\u003cp\u003e有时我们也会发现，自己用的get或者post方法请求的，浏览器只有一个options请求。自己的get或post请求却没有。因为options请求即预请求没有通过，所以后面的get或post请求就不会建立。\u003c/p\u003e\u003cp\u003e这是因为你在header请求头里也传了参数，即传说中的设置了\u003cb\u003e自定义的请求头。这时就需要在服务器端设置响应头：\u003c/b\u003e\u003c/p\u003e\u003cdiv\u003e\u003cpre\u003e\u003ccode\u003eAccess-Control-Allow-Headers:字段1,字段2\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e字段1，字段2，分别对应你header中上传的字段。当然如果只有一个就只写一个，有多个就写多个，并用逗号分隔。\u003c/p\u003e","CreateDate":"2018-10-31T08:03:45.993Z","ArticleTag":"技术笔记","ArticleCover":"","Token":"eyJkYXRhIjp7fSwiY3JlYXRlZCI6MTU0MDk3Mjk5MywiZXhwIjozNjAwfQ==.+QISXz94u2cGJvp5+Ge3DiBrPF9jy+mWN9+YhISK0nQ=","CommentNum":0.0}
{"_id":{"$oid":"5bdc0663c7a7990ffcd4071a"},"Title":"CSS3动画","Summary":"Vue自己实现弹框动画","Content":"用惯了UI框架的弹框，发现自己写的弹框没有动画是真的别扭。自己动手添加动画时，发现在关闭弹框时，不知道如何实现一个打开弹框的逆执行效果？\n\n想到应该需要切换Dom的类，怀疑应该有可以不切换实现的方法。网上搜了搜发现别人也是用切换类来实现。就放弃了，自己也切换类来实现。一个类控制显示动画，另一个类逆执行显示动画。\n\n因为用的vue不能直接操作Dom，我的思路是设置两个变量，一个用来控制弹框显隐（Wrapper），一个用来控制类名切换（FadeAnimate）。\n\n前端样式如下：\n\n    \u003cdiv :class=\"FadeAnimate ? 'FriendUrlCreateWindowFadeIn' : 'FriendUrlCreateWindowFadeOut'\" v-show=\"Wrapper\"\u003e\u003c/div\u003e  \n\n\n    .FriendUrlCreateWindowFadeIn{\n        animation: FadeIn 0.2s linear;\n    }\n    .FriendUrlCreateWindowFadeOut{\n        animation: FadeOut 0.2s linear;\n    }\n    \n    @keyframes FadeIn{\n        0% {transform: scale(0.9)}\n        20% {transform:scale(0.925)}\n        60% {transform:scale(0.95)}\n        80% {transform:scale(0.975)}\n        100% {transform:scale(1)}\n    }\n    \n    @keyframes FadeOut{\n        0% {transform: scale(1)}\n        20% {transform:scale(0.975)}\n        60% {transform:scale(0.95)}\n        80% {transform:scale(0.925)}\n        100% {transform:scale(0.9)}\n    }\n\n打开（显示）弹框时没有什么别的操作，就设置两个变量为true即可：\n\n    this.Wrapper = true;\n    this.FadeAnimate = true;\n\n\n关闭弹框时需要先设置类名切换变量，然后延时等动画执行完毕，再关闭弹框\n\n    var That = this;\n    this.FadeAnimate = false;\n    setTimeout(function () {\n        That.Wrapper = false;\n    },200)\n","CreateDate":"2018-11-02T08:07:01.658Z","ArticleTag":"技术笔记","ArticleCover":"http://www.sunq.xyz:8888/u=2825975783,2562504592\u0026fm=26\u0026gp=0.jpg","CommentNum":3.0,"Token":"eyJkYXRhIjp7fSwiY3JlYXRlZCI6MTU0MTE0NTk2NCwiZXhwIjozNjAwfQ==.Kyzph9Eyhm51kpLGXlufiakc+jGIACN/iLtk4XyVwx4="}
{"_id":{"$oid":"5be7c790fb7a4011d4758aba"},"Title":"分页器(Vue.js)","Summary":"会涉及父组件与子组件的数据通讯","Content":"![20181107204529481.jpg.png](http://www.sunq.xyz:8888/20181107204529481.jpg.png)\n写了一个简单的分页器，就我博客上用的那个，Vue.js实现的PC端使用的，如上图。\n自己凭空想的，也不知道合不合理，有机会看看别人怎么实现的。我的思路是：\n\n首先分页肯定要写成一个组件，而且分页组件要放在一个个的列表页面组件中。这样的话页面组件就是父组件，分页器是子组件，会涉及父组件与子组件的数据通讯。\n\n## 一：两者分工\n\n父组件初始化分页器，这需要父组件给分页器传递控制显隐的参数、总数据量以及每页展示的条数。子组件中根据这些参数渲染出基本的样式。\n\n分页器在被点击后，比如点击了某一页或者点击了上一页，需要传递当前页给父组件。父组件根据接收到的当前页码，请求数据刷新列表。分页器的高亮切换、上一页及下一个样式切换都在分页器内部实现。\n\n## 二：分页器组件代码\n\n    \u003ctemplate\u003e\n        \u003cdiv class=\"Pagination\" v-show=\"Pagination\"\u003e\n            \u003cdiv :class=\"PageActive==0 ? 'PageNext PageNextEnable' : 'PageNext'\" @click=\"SelectPage(PageActive-1)\"\u003e上一页\u003c/div\u003e\n            \u003cdiv :class=\"PageActive== index ? 'PageNum PageActive' : 'PageNum'\" v-for=\"(item,index) in PageNum\" @click=\"SelectPage(index)\"\u003e{{ index+1 }}\u003c/div\u003e\n            \u003cdiv :class=\"PageActive+1 == PageNum ? 'PageNext PageNextEnable' : 'PageNext'\" @click=\"SelectPage(PageActive+1)\"\u003e下一页\u003c/div\u003e\n            \u003cdiv class=\"PageTotalNum\"\u003e共{{PageTotalNum}}条\u003c/div\u003e\n        \u003c/div\u003e\n    \u003c/template\u003e\n    \n    \u003cscript\u003e\n      export default {\n        name: \"Pagination\",\n        data:function () {\n          return{\n            // 当前选中页数\n            PageActive:0\n          }\n        },\n        methods: {\n          // 选择分页\n          SelectPage:function (SelectPage) {\n            var That = this;\n            if(SelectPage \u003e -1 \u0026\u0026 SelectPage \u003c this.PageNum){\n    \n              That.PageActive = SelectPage;\n              That.$emit('PaginationToParent',SelectPage);\n            }\n          }\n        },\n        props:['Pagination','PageTotalNum','PageNum']\n      }\n    \u003c/script\u003e\n\n## 三：列表页使用分页器\n\nhtml代码\n\n    \u003cPagination v-bind:Pagination=this.Pagination\n                v-bind:PageTotalNum=this.PageTotalNum\n                v-bind:PageNum=this.PageNum\n                v-on:PaginationToParent=\"ValueByPagition\"\n    \u003e\u003c/Pagination\u003e\n\n假如列表页每页展示16条数据，那初始化页面时第一次先请求17条数据。判断得到的数据数量，如果小于等于16条就不渲染分页器了，如果大于16条就渲染分页器。下面是初始化分页器：\n\n    // 显示分页器\n    That.Pagination = true;\n    //需获取数据总条数\n    That.PageTotalNum = data;\n    //显示页码按钮使用\n    That.PageNum = Math.ceil(data / 16);\n\n接收分页器传递过来的当前页码，并请求数据，渲染列表\n\n    methods:{\n      ValueByPagition : function (SelectPage) {\n        var That = this;\n          this.SQFrontAjax({\n            Url: '/api/FriendUrlRead/foreend',\n            UploadData: {\n            params: {\n            PagnationData: {\n              Skip:SelectPage * 16,\n              Limit:16\n            }\n          }\n        },\n        Success: function (data) {\n          //渲染列表\n          That.FriendsUrlList = data;\n        }\n      });\n    }\n\n## 四：Vue中父子组件传值语法\n\n1.父组件向子组件传值\n\n父组件在摸板中，像使用自定义标签调用子组件时，将变量放在子组件上，这样自动就传给子组件内部了。\n\n    \u003cPagination v-bind:Pagination=this.Pagination\n                 v-bind:PageTotalNum=this.PageTotalNum             \n                 v-bind:PageNum=this.PageNum\u003e\n    \u003c/Pagination\u003e\n\n子组件内部需要声明props参数，并且这些参数就不用声明直接在模板中使用了。\n\n    export default {\n      props:['Pagination','PageTotalNum','PageNum']\n    }\n\n2.子组件给父组件传值\n\n子组件发送：\n\n    That.$emit('PaginationToParent',SelectPage);\n\n父组件接收：\n\n首先摸板中调用子组件时，绑定v-on方法，与子组件发送的第一个参数一致。\n\n    \u003cPagination v-on:PaginationToParent=\"ValueByPagition\" \u003e\u003c/Pagination\u003e\n\n并且什么ValueByPagition方法，这个方法接受的参数就是子组件$emit方法中第二个参数\n\n    methods:{   \n      ValueByPagition :function(SelectPage){\n        console.log(SelectPage);//此变量就是子组件$emit方法中第二个参数\n      }\n    }\n# 五：父组件操作子组件方法\n子组件中，定义方法：\n```\nexport default {\n    name: \"Pagination\",\n    methods: {\n      SwitchPagin:function (bool) {\n        this.Pagination = bool;\n        this.PageActive = 0;\n      }\n    }\n}\n```\n\n\n\n父组件中，直接根据ref定位，调用方法即可：\n```\n\u003cPagination ref=\"Pagination\"\u003e\u003c/Pagination \u003e\n\nThat.$refs.Pagination.SwitchPagin(true);\n```\n\n\n\n","CreateDate":"2018-11-08","ArticleTag":"技术笔记","ArticleCover":"http://www.sunq.xyz:8888/timg.jpg","Token":"eyJkYXRhIjp7fSwiY3JlYXRlZCI6MTU0MTkxNjE4MSwiZXhwIjozNjAwfQ==.19Pu92A6IvjUK96/x2uIlXsyR2IAiToQpSQRefM6xhQ=","CommentNum":0}
{"_id":{"$oid":"5beaab072295cf1278e21db3"},"Title":"对我的第一印象","Summary":"由于自己写的博客，所以可能不好的地方看的时间久了就不知道哪里不好看了。求告诉我你的初见感受","Content":"前段时间网上流行：不知妻美刘强东，哈哈，确实有些东西看的多了顺眼了，就不知道好看在哪，不好看在哪。\n\n由于在写代码时会一遍遍的调试页面，所以看的多了，我不知道页面有哪些地方不协调，或者说很丑。\n\n求只如初见的你，告诉我对博客的第一印象，谢谢啦","CreateDate":"2018-11-13T10:41:59.848Z","ArticleTag":"征求意见","ArticleCover":"http://www.sunq.xyz:8888/u=1034855269,442651696\u0026fm=26\u0026gp=0.jpg","Token":"eyJkYXRhIjp7fSwiY3JlYXRlZCI6MTU0MjEwNDczOSwiZXhwIjozNjAwfQ==.Z5jfRoHY42oqbR2O8RwFVjBDd5aD1LEZZ4MR+ko/bsA=","CommentNum":5}
{"_id":{"$oid":"5bf4cd32ef051e0768cf6be7"},"Title":"Vue使用富文本编辑器","Summary":"本人用vue使用富文本编辑器踩了很多坑，特记下供大家借鉴。","Content":"## 一.选取编辑器\n\n刚开始使用的是kindeditor，在npm社区中找到了适用于vue的版本vue-kindeditor。存在如下缺陷：文档不全、网上资料不全、npm社区实例过于简单、上传图片不能控制图片尺寸。\n\n最终换用了wangEditor，优点：文档齐全（有具体vue用法实例）、网上资料多、上传图片可以控制尺寸。\n\n个人推荐wangEditor，官网wangEditor - 轻量级web富文本编辑器\n\n## 二：实例代码\n\n前端vue\n\n    html:\n    \u003cdiv class=\"ArticleDetail\"\u003e\n      \u003cdiv ref=\"editor\" style=\"text-align:left\"\u003e\u003c/div\u003e\n    \u003c/div\u003e\n\njs:\n\n    \u003cscript\u003e\n      import axios from 'axios';\n      import {Loading} from 'element-ui'\n      import E from 'wangeditor'\n      var editor;\n    \n      export default {\n        name: \"WriteArticle\",\n        data: function () {\n          return {\n            Title:'',\n            Content:''\n          }\n        },\n        mounted:function(){\n          var That = this;\n          editor = new E(this.$refs.editor);\n          editor.customConfig = {\n            onchange:function(html){\n              That.Content = html\n            },\n            uploadImgServer: '/api/UploadImg', // 上传图片到服务器\n            uploadFileName : 'Content', //后端使用这个字段获取图片信息\n            uploadImgMaxLength : 1 , // 限制一次最多上传 1 张图片\n          } \n          editor.create()\n        }\n      }\n    \u003c/script\u003e\n\n后端node.js\n\n    Express.post('/UploadImg',function (Request,Response) {\n      var From = new Formidable.IncomingForm();\n      //设置保存 文件路径\n      var TargetFile = Path.join(__dirname, './Public/');\n      From.uploadDir = TargetFile;\n    \n      From.parse(Request, function (err, fields, files) {\n        if (err) throw err;\n        var FilePath = files.Content.path;    //此content由前端uploadFileName设置\n        var NewPath = Path.join(Path.dirname(FilePath), files.Content.name);\n        FS.rename(FilePath, NewPath, function (err) {\n          if (err) throw err;\n          var MyJson = {\n            errno: 0,\n            data:['http://localhost:8888/' + files.Content.name]\n          };\n          Response.json(MyJson);\n        });\n      });\n    });\n\n## 三：代码高亮\n\n用了wangEditor才发现，3.0版的不支持代码高亮。可是我的应用场景是我的博客，必须要有代码高亮功能，无奈换掉编辑器。\n\n经过一番对比又选了一个叫mavon-editor的基于vue实现的MakeDown编辑器。好处是使用真滴方便，而且可以与别的MarkDown编辑器实现直接复制文本。Github地址如下hinesboy/mavonEditor，按文档操作即可\n\n需要注意的地方是一般使用富文本的都是管理端，客户端拿到MarkDown格式的数据需要使用maked组件转成html格式的数据来展示。客户端还需要引用一个样式如下\n\n    \u003clink href=\"https://cdn.bootcss.com/github-markdown-css/2.10.0/github-markdown.min.css\" rel=\"stylesheet\"\u003e\n\n还需要在展示数据的容器上加上一个class，如：\n\n    \u003cdiv class=\"markdown-body\" v-html=\"Article.Content\"\u003e{{ Article.Content }}\u003c/div\u003e\n","CreateDate":"2018-11-21T03:12:28.963Z","ArticleTag":"技术笔记","ArticleCover":"http://www.sunq.xyz:8888/1543203537(1).jpg","Token":"eyJkYXRhIjp7fSwiY3JlYXRlZCI6MTU0Mjc2OTkxMywiZXhwIjozNjAwfQ==.IICifNT2d8oqVhta4HYGucX6qn+PPXgd6QyfD0DY2XE=","CommentNum":0}
{"_id":{"$oid":"5bf61be472e9580e506ff3e1"},"Title":"博客服务器搭建(win server 2012)","Summary":"博客服务器搭建的各个坑，比如Apache、FTP、虚拟目录等","Content":"# 一：打开端口\n服务器上装了一个mongodb，监听的8888端口。服务器浏览器本地访问8888端口，可以正常访问，内网访问也可以，但是外网ip访问不了这个端口。\n\n这时需要为服务器新增这个8888端口，具体操作可参考，https://jingyan.baidu.com/article/e75057f2c463e8ebc81a8960.html\n\n# 二：Apache\n1.安装apache\n\nApache服务器的下载与安装 - zhangnana200的博客 - CSDN博客\n\n2.apache网站根目录\n\n地址：Apache24/htdocs/\n\n3.外网访问\n\n设置外网访问时记着开端口的防火墙\n\n# 三：配置FTP\n网上有很多办法，自己搜吧。踩过的坑如下两个：\n\n1.记着给服务器FTP对应的端口设置防火墙。\n\n比如我的FTP用的21端口，我开放了20和21两个端口\n\n2.用FileZilla链接，报错150 Opening BINARY mode data connection.\n\n但是用webstorm的ftp工具链接没有问题。这时改fileZilla对应站点的传输设置为主动。\n![image.png](http://www.sunq.xyz:8888/image.png)\n# 四：解除80端口占用\n开启apache时发现，启动不了，查了查说可能是80端口被占用\n\n1.查找80端口的占用者\n\nnetstat -ano\n![v26b4471b9fe2ac3a80a09309a2777035b_hd.jpg](http://www.sunq.xyz:8888/v2-6b4471b9fe2ac3a80a09309a2777035b_hd.jpg)\n再去任务管理器，查到是system占用了。看选中行前面名称。\n![v253e53528c830e2c3017769460243d0a4_hd.jpg](http://www.sunq.xyz:8888/v2-53e53528c830e2c3017769460243d0a4_hd.jpg)\nsystem占用，一般是因为sqlserver、迅雷、IIS这些默认端口用80的应用。我只用了IIS\n\n2.关闭IIS/修改IIS的端口号\n\n关闭IIS或者修改IIS的端口号，就可以解决80端口占用的问题了。关掉IIS FTP也不能用了，如果想保留FTP还是修改IIS端口号，不关闭IIS。\n\n刚关闭IIS时，任务管理器中80端口还显示是system在用。但是可能是没刷新，或者什么别的原因。反正这时候去启动apache是可以的，而且启动后再看80端口就是apache在用了。\n![v2e42c797f93c7703868ab7b456b1333f5_hd.jpg](http://www.sunq.xyz:8888/v2-e42c797f93c7703868ab7b456b1333f5_hd.jpg)\n![v2b0c2ceb400cbdf5a72b66b824e34de5a_hd.jpg](http://www.sunq.xyz:8888/v2-b0c2ceb400cbdf5a72b66b824e34de5a_hd.jpg)\n\n![v2a941a7848dfd36b733d1b1807b9ff22b_hd.jpg](http://www.sunq.xyz:8888/v2-a941a7848dfd36b733d1b1807b9ff22b_hd.jpg)\n![v24b94271214b3c55bf96231804d391985_hd.jpg](http://www.sunq.xyz:8888/v2-4b94271214b3c55bf96231804d391985_hd.jpg)\n# 五：配置虚拟目录\n虚拟目录是一个影射，由一个url映射到服务器的一个目录。\n\n比如我们需要打开一个域名时就直接打开某个静态目录文件目录。如果按照apache默认那个静态网页根目录，可能需要在url中加入文件夹名字，就暴露了服务器路径。举个例子：\n\n如果不设置虚拟目录，需要这样经过font文件夹，才能打开博客首页。因为博客的静态网页在font文件夹里面放着\n\n```\nwww.sunq.xyz/font\n```\n\n如果用了虚拟目录，这样就可以跳过文件夹目录，直接打开博客首页了。下面就可以直接打开\n\n```\nwww.sunq.xyz\n```\n\n配置代码如下：当然首先要在httpd.conf中引入httpd-vhosts.conf文件\n\nhttpd-vhosts.conf下\n\n```\n\u003cVirtualHost *:80\u003e\n\u0009DocumentRoot \"C:/Program Files/Apache24/htdocs/font\"\n\u0009ServerName www.sunq.xyz\n\u0009ErrorLog \"logs/dummy-host2.example.com-error.log\"\n    CustomLog \"logs/dummy-host2.example.com-access.log\" common\n\u003c/VirtualHost\u003e\n```\n\n# 六：设置二级域名\n\nhttpd-vhosts.conf下\n\n```\n\u003cVirtualHost *:80\u003e\n\u0009DocumentRoot \"C:/Program Files/Apache24/htdocs/back\"\n\u0009ServerName admin.sunq.xyz\n\u0009ErrorLog \"logs/dummy-host2.example.com-error.log\"\n    CustomLog \"logs/dummy-host2.example.com-access.log\" common\n\u003c/VirtualHost\u003e\n```\n\n然后记得CDN域名解析，我的域名在腾讯云买的，就在腾讯云上设置即可。","CreateDate":"2018-11-22T02:51:31.423Z","ArticleTag":"服务器部署","ArticleCover":"http://www.sunq.xyz:8888/u=1027801245,1570110167\u0026fm=26\u0026gp=0.jpg","Token":"eyJkYXRhIjp7fSwiY3JlYXRlZCI6MTU0Mjg1NDA4NiwiZXhwIjozNjAwfQ==.x497sYAcBy/bA50rR17peOQuYyn+3wPs5jRBeJD+Uo4=","CommentNum":0}
{"_id":{"$oid":"5bf75d4e991d3b09b8c6402d"},"Title":"Express使用笔记","Summary":"Node.js的框架使用记录，入门级的","Content":"# 一：get/post参数获取\n\n1.Get获取：\n\n```\nApp.post('/ArticleRead/:accesstype', function (req, res) {\n  console.log(req.query);\n});\n```\n\n\n2.Post获取：\n\n原生node对post参数的获取是很麻烦的，\n\n```\nreq.on('data', function (chunk) {\n body += chunk;  //一定要使用+=，如果body=chunk，因为请求favicon.ico，body会等于{}\n console.log(\"chunk:\",chunk);\n}); \n```\n\n\nExpress里，与get请求不同，post请求还必须引入中间件body-parser，才能使用req.body。req默认是没有body这个字段的，使用了中间件，才后期在req中加入了body这个字段的。\n\n```\nApp.use(BodyParse.json());\nApp.use(BodyParse.urlencoded({extended:true}));\n\nApp.post('/ArticleRead/:accesstype', function (req, res) {\n  console.log(req.body);\n});\n```\n\n二：规划路由\n\n1.举栗一\n\nUrl是这样 http://localhost:8088/TagRead/foreend\n\n```\nApp.post('/TagRead/:accesstype', function (req, res) {\n  Request.params.accesstype得到的就是'foreend'\n}\n```\n\n2.举栗二\n\n```\nvar App = express();\nApp.get('/list/:listname/:id',function(req,res,next){\n  var listname = req.params.listname;\n  var id = req.params.id;\n  res.send('This is' + listname + ':' + id);\n});\n```\n\n\n前端请求时：http://localhost:1234/list/news/123\n输出：This is news:123\n","CreateDate":"2018-11-23T01:49:33.535Z","ArticleTag":"后端语言","ArticleCover":"http://www.sunq.xyz:8888/sunqblogexpress.jpg","Token":"eyJkYXRhIjp7fSwiY3JlYXRlZCI6MTU0MjkzNjA5MiwiZXhwIjozNjAwfQ==.5sxVzpLXZvuBFUz8iJf/drScJSNts/OCuRN6rElfLKI=","CommentNum":0}
{"_id":{"$oid":"5bfb60e5991d3b09b8c64030"},"Title":"关于options请求","Summary":"上次header中传值时出现了options请求，记录一下","Content":"有时我们在浏览器中发现发送的ajax请求自动请求两次，第一次是options请求，第二次才是你自己发送的get或post请求。\n\n有时我们也会发现，自己用的get或者post方法请求的，浏览器只有一个options请求。自己的get或post请求却没有。因为options请求即预请求没有通过，所以后面的get或post请求就不会建立。\n\n预请求不通过是因为你在header请求头里也传了参数，即传说中的设置了自定义的请求头。这时就需要在服务器端设置响应头：\n\n\u003e Access-Control-Allow-Headers:字段1,字段2\n\n字段1，字段2，分别对应你header中上传的字段。当然如果只有一个就只写一个，有多个就写多个，并用逗号分隔。","CreateDate":"2018-11-24","ArticleTag":"前端开发","ArticleCover":"http://www.sunq.xyz:8888/下载_看图王.png","Token":"eyJkYXRhIjp7fSwiY3JlYXRlZCI6MTU0MzIwMDg2OSwiZXhwIjozNjAwfQ==.k8qR4AsvFztKvVWd1JrcT//gW+Y7qsgoaDGQ2rYQzkM=","CommentNum":0}
{"_id":{"$oid":"5bfb6300991d3b09b8c64032"},"Title":"Mongodb简单操作","Summary":"记录下本博客用到的关于Mongodb的入门级操作","Content":"# 一：下表列出了 RDBMS 与 MongoDB 对应的术语：\n![图片.png](http://www.sunq.xyz:8888/图片.png)\n类似于mysql，刚开始数据库、集合都是要创建之后才有的。\n\n但是每次插入数据时都是插入一个对象，整个对象就是文档，对象的属性名就是字段。字段是不需在提前创建时声明的，每次插入文档时随意添加的。\n\n这点跟mysql还是有较大差别的，mysql在创建表格时需要指定有哪些列。插入数据时也要严格根据列名顺序填写。mongodb在创建集合时不需要声明有哪些字段，插入文档时也可以随意插入对象。\n# 二：安装及使用\n\n1.下载地址：https://www.mongodb.com/download-center#community\n\n下载.msi，点击安装即可，安装过程可能会很久，我两次都是安装一夜。如果安装太久中间打断好像也不影响安装。具体安装可看如下链接：\n\nwindows下MongoDB的安装及配置 - CSDN博客\n\u003e \n安装总结如下：\n1.安装；\n2.然后建db文件夹里面放data文件夹，配置db这个文件地址；\n3.建log文件夹建config文件写文件内容，配置文件地址；\n4.使用mongdb（mongodb安装目录bin下双击mongo.exe）\n新版4.0的mongodb自动配置了以上内容，无需再手动配置\n\n2.常用命令 （mongo的操作命令有点像js的方法调用）\n\ndb 显示所有数据库    （假如有个库叫test）\nuse test  使用test数据库   \nshow collections 显示所有集合（表）   假如有个集合叫runoob\ndb.runoob.find().pretty();  读集合runoob里的所有文档（行）   db不是指某个具体的数据库名字，就是db\ndb.runoob.findOne('5b2cc5ee4839f91d68b4bb2f');   读取_Id 为‘xxxx’的数据\ndb.runoob.insert({name:'孙权'});\ndb.runoob.remove({'name':\"孙权\"})    根据属性删除某些文档，删除name字段是孙权的所有文档\ndb.runoob.remove({})   删除所有文档\ndb.createCollection(name,options)  创建集合，options可选参数\ndb.runoob.update({'Title':'关于本博客'},{$set:{'CommentNum':0}});  修改数据\n\n3.node操作数据库\n\n```\nvar MongoClient = require(\"mongodb\").MongoClient\n   , assert = require('assert');\nvar Url = \"mongodb://localhost:27017/\";\n\nfunction Mongo() {\n   MongoClient.connect(Url,function (err,db) {\n      assert.equal(null,err);     //\n      console.log(\"数据库已建立\");\n      var DB = db.db(\"test\");\n      var MyInfo = {name:'孙权',age:24,money:100000};\n      DB.collection(\"runoob\").insertOne(MyInfo, function(err, res) {\n         console.log(\"文档插入成功\");\n         db.close();\n      });\n   });\n}\n```\n\n# 三：导出mongodb数据库\n\n主要以下三点：\n\n1.一次只能导出一个集合，且必须选择一个集合\n\n2.集合中具体的字段可以不写\n\n3.必须在bin文件夹下，运行命令行\n\nmongoexport -d test -c runoob -o C:\\Mongodb\\runoob.json --type json\n导出比较简单，如下：\n\nmongoimport -d test -c Users --file C:\\dbs\\runoob.json","CreateDate":"2018-11-25","ArticleTag":"后端语言","ArticleCover":"http://www.sunq.xyz:8888/下载 (2).jpg","Token":"eyJkYXRhIjp7fSwiY3JlYXRlZCI6MTU0MzIwMDg2OSwiZXhwIjozNjAwfQ==.k8qR4AsvFztKvVWd1JrcT//gW+Y7qsgoaDGQ2rYQzkM=","CommentNum":0}
{"_id":{"$oid":"5bfcb5f7991d3b09b8c64033"},"Title":"前端常用小功能总结","Summary":"总结一些前端经常遇到的场景","Content":"### 一：实时搜索\n\n项目需要一个能根据input框键入内容实时搜索的功能，JQ中有一个属性可以监听input框内任何属性有一点变化的方法，该方法下在input中拼拼音时，也会监听到字母的变化。可是我们想监听input框中键入一个汉字，或者说汉字发生变化时再触发方法。可是没有可以直接实现此需求的方法。曲线实现下，判断input中全为中文时才触发\n\n```\nhtml:\n\u003cinput id=\"SearchInput\"\u003e\n\nJs:\n//判断全是中文的方法\nfunction IsAllChina(str) {\n   var reg =  /^[\\u4E00-\\u9FA5]+$/;\n   if (!reg.test(str)) {\n      return false;\n   } else {\n      return true;\n   }\n}\n$('#SearchInput').bind('input propertychange', function() {\n      if(IsAllChina($(this).val())){\n           ... ...\n      }\n});\n```\n### 二：本地存储\n\n1：应用场景\n\n当在一个页面想去用另外一个网页的数据时，可以用到web本地存储。\n\nlocalStorage的数据存储在你的浏览器上，所以你可以跨页面使用数据，具体可以在浏览器的调试工具中看到本地存储的键值对。\n\n2：存储\n\n具体用法中需要注意的是localStorage使用键值对的方法存储的，比如以下两种皆可实现存储一个值。\n\n    localStorage.setItem(\"test\",\"bilibi\");localStorage.test = \"bilibi\";\n\n但键值对的值必须是字符串，可我们经常需要存储一个对象。如果直接将一个对象放在一个键值对的值中对象就会默认被toString处理成字符串，这时就不太好处理了。\n\n我们可以在存值时现将对象转成JSON字符串，取值时再将JSON字符串恢复成JSON对象，来实现本地保存对象。如下简单封装：\n```\nfunction SQLocalStorage(key, value) {\n   if (!key) return false;\n   return value?localStorage.setItem(key,JSON.stringify(value))\n   :JSON.parse(localStorage.getItem(key));\n};\n```\n3：删除\n\n删除某个字段：localStorage.removeItem(\"Extension\");\n\n删除全部缓存：localStorage.clear();\n\n### 三：数据滤重\n比如有如下数据，要求将id相同的数据滤重，并将它们的name拼在一起。\n```\nvar a = [\n{id:'001',name:'sq'},\n{id:'002',name:'zk'},\n{id:'003',name:'sp'},\n{id:'001',name:'papa'},\n{id:'004',name:'bilibili'}\n... ...\n]\n```\n这种情况下也只有老老实实排序，不管冒泡排序还是别的排序方法。可以在内外层遍历里，如果内层id等于外层id，统一将内层数据制空(赋值为{})，并将相加的字符串给外层。然后再处理一遍将所有空对象剔除掉(可以建一个新数组，push进新数组中)。\n### 四：二级联动\n\n固定Dom的二级联动，监听第一个Select的选中事件。如果选中就根据选中值请求数据填充第二个select的option。\n### 五：转换秒为时分秒\n以秒转 分秒 为例，利用js语法特点，/(整除)然后取整可以拿到分，%(求余)即可拿到整除余下的那些秒，然后整除(时)拼接%(秒)，可以拿到分秒；时分同理可得\n```\n/*秒转换为时分*/\nfunction FormatSeconds(value) {\n    var secondTime = parseInt(value);// 秒\n    var minuteTime = 0;// 分\n    var hourTime = 0;// 小时\n    if(secondTime \u003e 60) {//如果秒数大于60，将秒数转换成整数\n        //获取分钟，除以60取整数，得到整数分钟\n        minuteTime = parseInt(secondTime / 60);\n        //获取秒数，秒数取佘，得到整数秒数\n        secondTime = parseInt(secondTime % 60);\n        //如果分钟大于60，将分钟转换成小时\n        if(minuteTime \u003e 60) {\n            //获取小时，获取分钟除以60，得到整数小时\n            hourTime = parseInt(minuteTime / 60);\n            //获取小时后取佘的分，获取分钟除以60取佘的分\n            minuteTime = parseInt(minuteTime % 60);\n        }\n    }\n    var result = \"\" + parseInt(secondTime) + \"秒\";\n\n    if(minuteTime \u003e 0) {\n        result = \"\" + parseInt(minuteTime) + \"分\" + result;\n    }\n    if(hourTime \u003e 0) {\n        result = \"\" + parseInt(hourTime) + \"小时\" + result;\n    }\n    return result;\n}\n```\n### 六：时间戳转年月日时分秒\n\njs提供了获取年月日时分秒的每一个对应的方法\n### 七.分批上传\n\n一次http请求上传超大数据时(比如一个存两万个对象的数组)会卡死浏览器，这时需要分批上传。递归来传可破\n### 八：点击高亮\n![image.png](http://www.sunq.xyz:8888/image.png)\n1.如果操作DOM\n```\n\u003cdiv id=\"ViewIndexStatisType\"\u003e\n\u0009\u003cspan class=\"FontColor All\" onclick=\"EditClass(0)\"\u003e第一\u003c/span\u003e\n\u0009\u003cspan class=\"FontColor\" onclick=\"EditClass(1)\"\u003e第二\u003c/span\u003e\n\u0009\u003cspan class=\"FontColor\" onclick=\"EditClass(2)\"\u003e第三\u003c/span\u003e\n\u003c/div\u003e\n\u003cscript src=\"js/jquery-3.2.1.min.js\"\u003e\u003c/script\u003e\n\u003cscript\u003e\nfunction EditClass(Num) {\n    for(var i=0;i\u003c$(\"#ViewIndexStatisType span\").length;i++){\n        $(\"#ViewIndexStatisType\").find(\"span\").eq(i).removeClass(\"All\");\n    }\n    $(\"#ViewIndexStatisType\").find(\"span\").eq(Num).addClass(\"All\");\n}\n\u003c/script\u003e\n```\njquery还有一个贼方便的方法siblings。使用在当前dom上，可以遍历该dom的兄弟元素（不包括自己），批量处理别的Dom。\n```\ndom.addClass('layui-table-click').siblings().removeClass('layui-table-click');\n```\n2.如果不操作DOM\n\n类似vue等框架是不支持操作DOM的，一切都用数据解决\n\n不操作DOM可查Vue使用笔记\n### 九：获取本周、本月\n```\n/*\n   获取本周的某一天\n   getTime(0) 本周第一天 比如：返回2018-06-25\n   getTime(-6) 本周最后一天 比如：返回2018-07-01\n**/\nfunction getCurrentWeekTime(n){\n    var now=new Date();\n    var year=now.getFullYear();\n\n    var month=now.getMonth()+1;\n    var date=now.getDate();\n    var day=now.getDay();\n\n    if(day!==0){\n        n=n+(day-1);\n    }\n    else{\n        n=n+day;\n    }\n    if(day){\n        if(month\u003e1){\n            month=month;\n        }\n        else{\n            year=year-1;\n            month=12;\n        }\n    }\n    now.setDate(now.getDate()-n);\n    year=now.getFullYear();\n    month=now.getMonth()+1;\n    date=now.getDate();\n    s=year+\"-\"+(month\u003c10?('0'+month):month)+\"-\"+(date\u003c10?('0'+date):date);\n    return s;\n}\n/*\n   获取本月时间\n   第一天：GetCurrentMonth('Begin') 返回：2016-06-01\n   最后一天：GetCurrentMonth('End') 返回：2016-06-30\n   * */\nfunction GetCurrentMonth(Type){\n    var Result;\n    var Now = new Date();\n    var Year = Now.getFullYear();\n    var Month = Now.getMonth()+1\u003c10 ? \"0\"+(Now.getMonth()+1) : Now.getMonth()+1;\n    if(Type == 'Begin'){\n        Result = Year + \"-\" + Month + \"-\" + \"01\";\n    }\n\n    if(Type == 'End'){\n        var MonthLastDay = new Date(Year,Now.getMonth()+1,0).getDate();\n        Result = Year + \"-\" + Month + \"-\" + MonthLastDay;\n    }\n    return Result;\n}\n```\n### 十：浮点数精度处理\n\n由于浮点数直接相加会出现小数点后尾数太多的问题，可以做一系列转换来解决。先乘于1000然后转成字符串，然后截取小数点后面的字符。这样来保持精度。","CreateDate":"2018-11-27T03:04:59.169Z","ArticleTag":"前端开发","ArticleCover":"http://www.sunq.xyz:8888/前端常用小功能总结.jpg","Token":"eyJkYXRhIjp7fSwiY3JlYXRlZCI6MTU0MzI4Nzg2MiwiZXhwIjozNjAwfQ==.FTID7My5JwRXrfFHScFcVNdUMZ3Y6+uV2njunGwb1XQ=","CommentNum":0}
{"_id":{"$oid":"5bfe007f991d3b09b8c64034"},"Title":"正则表达式","Summary":"正则表达式很常用，下面是语法及实例展示，基本上覆盖全面了","Content":"Regulax Expression由普通字符(也叫原义字符例如字符a~z)以及特殊字符(称为元字符)组成的文字模式。\n## 一：元字符语法\n\n#### 1.字符类\n\n[xyz] 字符集，匹配这个集合中的任一一个字符(或元字符) ，same as x|y|z\n```\n\"a1b2c3d4\".replace(/[abc]/g,\"X\");      //X1X2X3d4\n```\n[^xyz] 不匹配这个集合中的任何一个字符 ，不是这里面的任意一个字符\n```\n\"a1b2c3d4\".replace(/[^abc]/g,\"X\");      //aXbzXcXXX\n```\n#### 2.范围类\n\n[a-z]或者[0-9]\n```\n\"a1b2c3d4\".replace(/[a-z]/g,\"Q\");    //Q1Q2Q3Q4\n\"2017-10-17\".replace(/[0-9-]/g,\"A\");      //   AAAAAAAAAA   \n```\n#### 3.预定义类\n\n. 除了回车符和换行符外所有的字符（一个字符）\n\\* 匹配前面的子表达式任意次。例如，zo*能匹配“z”，也能匹配“zo”以及“zoo”。*等价于{0,}\n\n\\d 匹配一个字数字符，/\\d/ = /[0-9]/ bound\n\n\\D 匹配一个非字数字符，/\\D/ = /[^0-9]/\n\n\\s 匹配一个空白字符，包括\\n,\\r,\\f,\\t,\\v等 space\n\n\\S 匹配一个非空白字符，等于/[^\\n\\f\\r\\t\\v]/\n\n\\w 匹配一个可以组成单词的字符 word 字母数字下划线[a-zA-Z_0-9]\n\n\\W 匹配一个不可以组成单词的字符，如[\\W]匹配\"$5.98\"中的$，等于[^a-zA-Z0-9]。\n\n[\\b] 匹配一个退格符\n\n\\cX 这儿，X是一个控制符，/\\cM/匹配Ctrl-M\n\n\\n 匹配一个换行符\n\n\\r 匹配一个回车符\n\n\\t 匹配一个制表符\n\n\\v 匹配一个重直制表符\n\n##### 3-1.边界\n\n^ 以xxx开始 在字符类中表示取反 [^0-9]\n```\n'@123@abc@'.replace(/@./g,\"X\");      //X23Xbc@\n'@123@abc@'.replace(/^@./g,\"X\");      // X23@abc@  只以@开头的任意字符才会匹配，即1\n```\n$ 以xxx结束 但是^和$放的位置不一样，^放在前面，$放在后面\n```\n'@123@abc@'.replace(/.@$/g,\"X\"); // @123@abX  只以@结尾的任意字符才会匹配，即1\n```\n\\b 匹配一个单词的边界\n```\n\"this is a girl\".replace(/is/g,\"0\");     //th0 0 a girl\n\"this is a girl\".replace(/\\bis/g,\"0\");   //this 0 a girl\n\"this is a girl\".replace(/\\Bis\\b/g,\"0\");   //th0 is a girl\n```\n\\B 匹配一个单词的非边界\n##### 3-2.断言\n![index.png](http://www.sunq.xyz:8888/index.png)\n```\nString str =\"中华人民共和国，简称（中国）。\";  //输入括号中的中国，不要括号\nMatcher mat = Pattern.compile(\"(?\u003c=\\\\（)(\\\\S+)(?=\\\\）)\").matcher(str);//此处是中文输入的\n````\n\n#### 4.量词\n\n？出现零次或者一次\n\n+ 出现一次或多次\n\n* 出现零次或多次(任意次)\n\n{n} 出现n次\n\n{n,m} 出现n到m次\n\n{n,} 至少出现n次\n\n##### 4-1.贪婪和非贪婪模式\n\n'a12345678'.replace(/\\d{3,6}/g,\"A\"); //aA78\n\n贪婪模式：如果直接{3,6}系统会按最大的,意思会将6个数字替换成A\n\n非贪婪模式：加？\n```\n'a12345678'.replace(/\\d{3,6}?/g,\"A\"); //aAA78 加了?后将三个数字换成A，但是g所以AA\n```\n#### 5.分组 ( )\n\n想匹配字母数字三次，如果只是\"a1b2c3d4\".replace(/[a-z][0-9]{3}/g,\"A\");虽然也是字母数字匹配三次，是不行的\n```\n使用分组才行\"a1b2c3d4\".replace(/([a-z][0-9]){3}/g,\"A\"); //\"Ad4\"\n```\n##### 5-1.或 |\n\n如果只是匹配名字中的两部分：\n```\n'ByronCasper'.replace(/Byron|Casper/g,'X');      //XX\n```\n如果匹配名字中的四个单词：\n```\n'ByronsperByrCasper'.replace(/Byr(on|Ca)sper/g,'X');           //XX\n```\n###### 5-2-1.反向引用(自己理解就是把某个分组声明成变量,变量用$n来取值,n从1开始)\n\n比如：2015-12-25 =\u003e 12/25/2015\n```\n'2015-12-25'.replace(/(\\d{4})-(\\d{2})-(\\d{2})/,'$2/$3/$1');\n```\n只有用反向引用才能达到这个效果\n\n###### 5-2-2.反向引用但忽略分组(不用某个变量，在分组内加上?:就可以)\n```\n'2015-12-25'.replace(/(?:\\d{4})-(\\d{2})-(\\d{2})/,'$1');\n```\n如果给第一个分组引用加上?:，那个$1就是第二个分组了\n\n#### 6.前瞻和后顾\n\n正则是从前往后匹配，所以字符串尾部是前，头部是后。js不支持后顾。\n```\n    正向前瞻exp(?=assert)负向前瞻exp(?!assert)\n```\nexp表示正则表达式，(?=assert)叫断言也是正则表达式。正向前瞻就是不光匹配正则还要符合断言部分，负向前瞻就是不匹配断言部分。就是说只是匹配了正则还不行，还要看看后面的字符匹配断言不。替换或者操作的只是正则部分，不会操作断言部分。\n\n比如要一个前面是单词且后面是数字，替换掉单词\n```\n'a2*3'.replace(/\\w(?=\\d)/g,\"X\");   //X2*3\n'a2*34vv'.replace(/\\w(?=\\d)/g,\"X\");   //X2*X4vv\n```\n\n比如要一个前面是单词且后面不是数字，替换掉单词\n```\n'a2*34vv'.replace(/\\w(?!\\d)/g,\"X\"); //aX*3XXX\n```\n#### 7.匹配斜杆\n```\n\"2017/20/10\".replace(/\\//g,\"-\");\n```\n## 二.例子\n\n##### 1.匹配一个“ ab+数字+任意字符 ”的字符串\n\n预定义类写法：/ab\\d./\n\n范围类写法：/ab[0-9][^\\r\\n]/\n\n##### 2.检测电话号\n```\nfunction CheckPhone(InputId) {\n   var Patter = /[0-9]/g;\n   var NumLength = $(\"#\"+InputId).val();\n   if(Patter.test(NumLength) \u0026\u0026 ((NumLength.length == 11) || (NumLength.length == 8))){\n      return true;\n   }else {\n      layer.msg(\"电话号码格式有误\");\n      return false;\n   }\n}\n```\n##### 3.替换中括号中的内容\n```\nvar MyString = '[[害羞]]我要好好过呀[[微笑]]';\nMyString = MyString.replace(/\\[\\[.*?\\]\\]/g,'a');\nconsole.log(MyString);       a我要好好过呀a\n```\n##### 4.获取中括号里的内容\n```\n//不保留中括号\nvar MyString = '[[害羞]]我要好好过呀[[微笑]]';\nMyString = MyString.match(/(?\u003c=\\[\\[).*?(?=\\]\\])/g);\nconsole.log(MyString);\n结果 [\"害羞\", \"微笑\"]\n```\n```\n//保留中括号\nvar MyString = '[[害羞]]我要好好过呀[[微笑]]';\nMyString = MyString.match(/\\[\\[.*?\\]\\]/g);\nconsole.log(MyString);\n结果 [\"[[害羞]]\", \"[[微笑]]\"]\n```\n","CreateDate":"2018-11-28T02:35:33.217Z","ArticleTag":"技术笔记","ArticleCover":"http://www.sunq.xyz:8888/u=3650994019,3219927513\u0026fm=26\u0026gp=0.jpg","Token":"eyJkYXRhIjp7fSwiY3JlYXRlZCI6MTU0MzM3MjQ3OCwiZXhwIjozNjAwfQ==.RMG7e93ihOTdp5Dl2LnK59JOONXYMujtP3M175rfNyg=","CommentNum":4}
{"_id":{"$oid":"5bffb3b9991d3b09b8c64037"},"Title":"生活就是斗争（转载）","Summary":"虽然说 en~  人生并没有什么意义。。。","Content":"![Lifeisstruggle_1538916450696.jpg](http://www.sunq.xyz:8888/Life-is-struggle_1538916450696.jpg)\n\u003e \n转自伟大的Joogen，地址为https://jooger.me","CreateDate":"2018-11-29T09:31:39.101Z","ArticleTag":"成长感悟","ArticleCover":"http://www.sunq.xyz:8888/life_1525227794831.jpg","Token":"eyJkYXRhIjp7fSwiY3JlYXRlZCI6MTU0MzQ4Mzc2MCwiZXhwIjozNjAwfQ==.+QkGhhFz0V978CBddpAWqbgrVLIE6sfT84Mm4+ctNvY=","CommentNum":2}
{"_id":{"$oid":"5c009829991d3b09b8c6403d"},"Title":"科学上网账号分享！","Summary":"出去后请遵纪守法，践行社会主义核心价值观。虽然我对网络限制很苦恼，但是不代表我的政治立场。","Content":"我是发现了一个好心博主，他特别善良，在他的博客上分享了科学上网账号，我使用了特别感动。也分享给大家：\n\n这是科学上网账号地址 https://www.welphen.com/\n\n这是shadowsocks安装包下载地址 https://www.welphen.com/resource\n\n再次声明如下：\n现在国内的网络自由受到了限制，很多人都会去科学上网，但我观察后发现这批人中有一部分是有反gong心理的，出去后就一直诋毁、散播谣言之类的。虽然我对网络限制很厌恶，但是不代表我的政治立场。出去后请遵纪守法，践行社会主义核心价值观。","CreateDate":"2018-11-30T01:37:10.755Z","ArticleTag":"技术笔记","ArticleCover":"http://www.sunq.xyz:8888/科学上网.jpg","Token":"eyJkYXRhIjp7fSwiY3JlYXRlZCI6MTU0MzU0MTY3OCwiZXhwIjozNjAwfQ==.OQvjuaxUI3C8uCD+lS/YCwwS9KQpke/YrB5J1TkjPD4=","CommentNum":0}
{"_id":{"$oid":"5c04ff34991d3b09b8c64045"},"Title":"跨域问题","Summary":"前端开发中跨域问题是绕不过去的坎儿，下面讨论下跨域这个事","Content":"## 一：跨越问题\n\n前端开发中跨域问题是绕不过去的坎儿。下面举个例子：\n\n我们在本地开发环境下，用ajax去访问外网提供的一个接口。ajax如下图：![跨域1.jpg](http://www.sunq.xyz:8888/跨域1.jpg)\n\n然后我们在浏览器中用localhost运行这个ajax，就会因为跨域问题无法访问接口，如下截图：![跨域2.jpg](http://www.sunq.xyz:8888/跨域2.jpg)\n## 二：解决方案\n\n#### 1.方案一:\n\njsonp比较容易理解，但是由于自身机制原因只能用get请求，且需要后端配合，局限性太大。jsonp具体是应用\n```\n\u003cscript src=\"\"\u003e\n```\n\n标签可以直接跨越这个漏洞，通过get方式来请求接口。然后跟后端协商好，如果请求成功，后端打印一个拼接好的js语句来执行某个方法。然后前端就事先在js文件下面的语句中声明好这个方法。\n\n#### 2.方案二：\n\n\u003e 2-1 apache服务器\n\n用本地服务器反向代理，不限制请求方法，前端自己搞定无需打扰后台同事，比较实用。\n\n下面介绍如何配置反向代理，我用的wampserver2.5，apach版本为2.4.9\n\n步骤一：打开apach/conf/httpd.conf文件，删除如下语句前的注释(#)\n\n```\nLoadModule proxy_module modules/mod_proxy.so\nLoadModule proxy_connect_modulemodules/mod_proxy_connect.so\nLoadModule proxy_ftp_modulemodules/mod_proxy_ftp.so\nLoadModule proxy_html_module modules/mod_proxy_html.so\nLoadModule proxy_http_modulemodules/mod_proxy_http.so\n```\n\n\n步骤二：打开apach/conf/extra/proxy-html.conf，删除76行左右如下语句前的注释(#)\n```\nProxyRequests Off  \u003c-- this is an important security setting\n```\n配置如下核心语句，即可实现反向代理\n```\nProxyPass 随便写  外网接口\n例如：ProxyPass /proxy/ http://115.159.217.223/\n关于ProxyPass 右边第二个配置参数写代理的url(即我们要访问的那个外网接口url)。\nProxyPass右面第一个参数可以按自己意愿写，比如我们写/proxy/\n那么访问是用http://localhost/proxy/sunq/moningNight/app/\n就相当于访问http://115.159.217.223/sunq/moningNight/app/\n```\n最终ajax外网接口可以用localhost访问，这样就不存在跨域问题了。比如下图，可以与文章最上面的ajax对比url的不同。表面上不同其实如下的url实际上访问的就是上面的那个外网url\n![跨域3.jpg](http://www.sunq.xyz:8888/跨域3.jpg)\n    \n\u003e 2-2 node.js服务器\n```\nnpm install --save cors，然后在app.js文件中\nvar cors = require('cors');  \napp.use(cors());  \n```\n## 三：Options请求（预请求）\n\n跨域可能会发送Options请求，后端判断如果是option请求，直接返回200，但不执行参数处理。\n\n将Token放在header里来请求会引起预请求，将Token放在data里来请求应该就不会引起预请求问题了\n\n可参考跨域资源共享 CORS 详解 - 阮一峰的网络日志\n## 四：跨域请求返回码\n\n今天遇到一种情况，接口是我自己写的。跨域请求时接口状态200，也有数据返回。但是服务器报跨域警告，ajax不执行success方法。\n\n我记得以前用别人接口跨域时不返回200的，直接报错误状态码的。后来问了一圈，可能是我以前没有注意这块吧，网上大哥们都说这是正常现象。跨域本来就是返回数据，但是浏览器限制不能获取数据。","CreateDate":"2018-12-03T09:49:07.421Z","ArticleTag":"前端开发","ArticleCover":"http://www.sunq.xyz:8888/跨域头图.jpg","Token":"eyJkYXRhIjp7fSwiY3JlYXRlZCI6MTU0MzgyOTQzOSwiZXhwIjozNjAwfQ==.lY6QLSrC7BF5SCtXFOKLwmWc6GvwS1fk7of2gSQiExo=","CommentNum":0}
{"_id":{"$oid":"5c063b1f991d3b09b8c6404f"},"Title":"柔软时刻","Summary":"自己收藏的文章广播，在我内心柔软的时候或者心情不好时听听。这些文章或温暖、或优美、或宁静 ...","Content":"\n以下为我收藏的文章广播，在我内心柔软的时候或者心情不好时听听。这些文章或温暖、或优美、或宁静 ...\n\n\u003e 甜蜜的爱情\n\n[这大概就是感情的最美结局](http://music.163.com/dj?id=15900135\u0026userid=386558098)\n\n[因为喜欢，所以自卑](http://music.163.com/dj?id=906492789\u0026userid=386558098)\n\n[我甩了把初夜给我的女孩](http://music.163.com/dj?id=905126252\u0026userid=386558098)\n\n\u003e 关于生命\n\n[我们都擅长相见，不擅长告别](http://music.163.com/dj?id=1366508879\u0026userid=386558098)\n\n\u003e 懒惰时听听\n\n[有能力爱自己，有余力爱别人](http://music.163.com/dj?id=1368270640\u0026userid=386558098)\n\n\u003e 可爱的文章\n\n[致男友的一封信](http://music.163.com/dj?id=910649805\u0026userid=386558098)","CreateDate":"2018-12-04T08:25:40.593Z","ArticleTag":"成长感悟","ArticleCover":"http://www.sunq.xyz:8888/柔软的时刻.jpg","Token":"eyJkYXRhIjp7fSwiY3JlYXRlZCI6MTU0MzkxMTkwMywiZXhwIjozNjAwfQ==.JPCcsm21X3AyvuW07aNjJ5IaBbZxG51LNyv69qx9uwE=","CommentNum":2}
{"_id":{"$oid":"5c07c113991d3b09b8c64054"},"Title":"HTML5+CSS3 实例","Summary":"下面写几个工作中遇到和自己感兴趣的Html5+css3实例","Content":"## 一：HTML5 新标签\n\u003e 1.用Audio播放音频，并写一个控制面板\n\n![v2af0261210ae36fe5457d8d1010403ac8_hd.jpg](http://www.sunq.xyz:8888/v2-af0261210ae36fe5457d8d1010403ac8_hd.jpg)\nHtml5的Audio标签用起来特别方便，Audio的标签文档如下HTML 5 \u003caudio\u003e 标签，对象文档如下HTML DOM Audio 对象。Audio可以在标签中直接写一个control属性，如下\n```\n\u003caudio src=\"/i/horse.ogg\" controls=\"controls\"\u003e\n```\n即可使用默认的控制面板，但是默认控制面板在不同浏览器样式、功能不同，为了一致性决定直接写一个控制面板。控制面板主要功能：显示总时长、当前播放时长、暂停播放、显示进度条、进度条控制音频进度，如上图。\n```\n\u003cdiv\u003e\n    //Audio标签\n    \u003caudio id=\"Audio\"\u003e您的浏览器过于老旧，请更换浏览器尝试\u003c/audio\u003e\n    //进度条    \n    \u003cdiv id=\"ProgressBack\" style=\"width: 100%;background-color: #666;\n                                        cursor:pointer;margin-top: 20px\"\u003e\n\u0009 \u003cdiv style=\"height: 5px;background-color: red;width: 0\" id=\"Progress\"\u003e\n         \u003c/div\u003e\n    \u003c/div\u003e\n    //左边当前时间、暂停播放按钮、总时长\n    \u003cdiv style=\"text-align: center;margin-top: 70px;\"\u003e\n\u0009\u003cdiv style=\"display: flex;vertical-align: middle;\"\u003e\n\u0009     \u003ci id=\"NowTime\" style=\"width: 45%\"\u003e00.00\u003c/i\u003e\n\u0009     \u003ci class=\"layui-icon layui-icon-play\" style=\"font-size: 3rem;cursor:pointer\" id=\"Toggle\"\u003e\u003c/i\u003e\n\u0009     \u003ci id=\"TotalTime\" style=\"flex: 45%\"\u003e\u003c/i\u003e\n\u0009\u003c/div\u003e\n    \u003c/div\u003e\n\u003c/div\u003e\n\n/*设置资源路径*/\n$(\"#Audio\").attr('src',\"./json/Audio/man.mp3\");\n/*填写总时长*/\n$('#Audio').on(\"loadedmetadata\",function () {\n   //alert(audio.duration)\n   $('#TotalTime').text(transTime(this.duration));\n});\n/*实时更改当前播放时间*/\n$('#Audio').get(0).addEventListener('timeupdate',updateProgress);\n\n //音频结束停止播放  \n$(\"#Audio\")[0].addEventListener('ended',function () {\n     $(\"#Audio\").get(0).pause();\n     $('#Toggle').removeClass('layui-icon-pause').addClass('layui-icon-play');\n});\n\nvar ProgressBackWidth = $(\"#ProgressBack\").width();\nvar audio = $('#Audio').get(0);\n// 监听进度条\n$('#ProgressBack').click(function (e) {\n   var rate = e.offsetX/ProgressBackWidth;\n   audio.currentTime = audio.duration * rate;\n});\n//暂停、播放按钮\n$('#Toggle').click(function () {\n   if(audio.paused){\n      $(\"#Audio\").get(0).play();\n      $('#Toggle').removeClass('layui-icon-play').addClass('layui-icon-pause');\n   }else {\n      $(\"#Audio\").get(0).pause();\n      $('#Toggle').removeClass('layui-icon-pause').addClass('layui-icon-play');\n   }\n});\n//将秒转化为时间格式\nfunction transTime(time) {\n   var duration = parseInt(time);\n   var minute = parseInt(duration / 60);\n   var sec = duration % 60 + '';\n   var isM0 = ':';\n   if (minute == 0) {\n      minute = '00';\n   } else if (minute \u003c 10) {\n      minute = '0' + minute;\n   }\n   if (sec.length == 1) {\n      sec = '0' + sec;\n   }\n   return minute + isM0 + sec\n}\n//更新进度条\nfunction updateProgress() {\n   var value = Math.round((Math.floor(audio.currentTime) / Math.floor(audio.duration)) * 100, 0);\n   $('#Progress').css('width', value+'%');\n   $('#NowTime').html(transTime(audio.currentTime));\n}\n```\n注意事项：音频的url不能使用https://\n\n\u003e 2. canvas画个棋盘\n1.css设置画布的长宽\n\ncanvas画布是用js绘制的，能操作到canvas的每一个像素。\ncanvas的长宽应该用js设置，或者在html写canvas标签时写\n```\n// contents of js文件:\nvar canvas = document.getElementById(\"mycanvas\");\ncanvas.width=500;\ncanvas.height=400;   //注意是canvas对象\ncontent=canvas.getContext('2d');\n// contents of html文件\n\u003ccanvas width='100px' heigh='100px'\u003e\u003c/canvas\u003e\n```\n以上两种方法都行，但是用style样式表就会出现问题，比如\n```\n// contents of css文件\ncanvas{\n    width:450px;    \n    height:450px;\n}\n```\n就会出现问题，出现一个大小不是450px的矩形。\n\n因为画布可以理解成一个照片，需要用js或写canvas标签时渲染出来。如果不渲染的话会有一个默认值，300px乘500px。所以如果不用js渲染，直接用css去设置canvas的样式，css其实设置的是默认300*500那个默认的canvas，这样会把默认那个canvas拉伸，就像css设置一个图片一样。\n\n然后就可以用css加js去操控画布啦。\n\n2.canvas要设成块元素\n\n我设置了canvas的css： margin：0 auto；死活不行，原来canvas不是块状元素\n\ndisplay: block;\n\n3.用canvas画圆 / 同心圆环\n```\n//画实心圆\nvar canva = document.getElementById(\"mycanvas\");content = canva.getContext('2d');\ncontent.beginPath();\ncontent.arc(x*30+15,y*30+15,12,0,Math.PI*2,true);      \n\ncontent.fillStyle='#000000';\ncontent.fill();    //fill是填充，stroke只是画个线\n\n//画渐变圆（圆中套一个圆）\nvar canva = document.getElementById(\"mycanvas\");\ncontent = canva.getContext('2d');\ncontent.beginPath();\ncontent.arc(x*30+15,y*30+15,12,0,Math.PI*2,true);      \ncontent.beginPath();\ncontent.arc(x*30+15,y*30+15,15,0,Math.PI*2,true);\n\nvar grd=content.createRadialGradient(x*30+15,y*30+15,0,x*30+15,y*30+15,10);\ngrd.addColorStop(0,\"#ffffff\");//白色 结合上面那句话，同一个圆心，白色远直径是零，灰色圆直径是10，最外面大圆直径是15。白色渐变，灰色也渐变就成了现在的样子\ngrd.addColorStop(1,\"#d9d9d9\");//一种灰色\ncontent.fillStyle=grd;\ncontent.fill();    //fill是填充充满，stroke只是画个线\n```\n总结：画同心圆跟画实心圆，前面都是一样的。不过是实心圆是fillstyle直接填充了个颜色。而同心圆是填充了对象。这个对象有两个圆组成，两个圆的圆心坐标相同半径不同，就有了同心圆的效果， 圆心不同就不是同心圆了。我感觉就算里面圆的半径是0，但它还是会有颜色效果的，有渐变效果。\n\n下面是用以上知识做的五子棋效果\n![v274f452727ab2dd81b1673db27d49afb7_hd.jpg](http://www.sunq.xyz:8888/v2-74f452727ab2dd81b1673db27d49afb7_hd.jpg)\n## 二：CSS3新属性\n\n1. 获取相同属性的第n个 p:nth-of-type(1) {｝ \n```\n\u003cdiv class=\"infoperson\"\u003e\n    \u003cp\u003e{{data.info.name}}\u003c/p\u003e\n    \u003cp\u003e{{data.info.depart_name}}\u003c/p\u003e\n\u003c/div\u003e\n.infoperson {\n        display: flex;\n        align-items: center;\n        padding-bottom: 0.6rem;\n        p:nth-of-type(1) {\n          font-size: 1.2rem;\n          margin-right: 1rem;\n          font-weight: bold;\n          color: @font_color_titleblack;\n        }\n        p:nth-of-type(2) {\n          font-size: 0.8rem;\n          color: @font_color_titleblack;\n        }\n      }\n```\n三：比较新的认知\n\n1：rem、em、px、vh等单位\n\npx和em、rem：\n\npx就是像素值，em就是根据基准来缩放字体的大小。em是相对于父元素的属性而计算的，Rem是相对于根元素\u003chtml\u003e\n\n如果你没有在根元素指定参照值，那浏览器默认就是 1rem 为 16px,如果你指定了值假设为 20px，那 1rem 就为 20px。\n\nvh的100%是指首屏高度，当涉及到大图时贼方便。\n\n2.媒体查询\n```\nbody{\n  max-width: 640px;\n  min-width: 320px;\n  width: 100%;\n  margin: auto;\n}\n@media only screen and (min-width: 641px) {\n    .banner{\n        height: 13rem;\n    }\n    .banner img{\n        height: 13rem;\n    }\n    .formtitle{\n        text-align: center;\n        font-size: 1.2rem;\n        padding: 1rem 2rem;\n    }\n}\n````\n3：组合属性\n```\n比如：\n1.margin:5px;\n2.background:url('img/a.png');\n```\n这些属性在浏览器调试工具中都是有三角符号，能伸开的。所以用background时可以伸开看组合属性中的内容，调节具体的某项\n## 四：浮层水平垂直居中\n![v2fd8349649e657a71f9b97369899292a5_hd.jpg](http://www.sunq.xyz:8888/v2-fd8349649e657a71f9b97369899292a5_hd.jpg)\n```\n\u003cdiv class=\"Cover\"\u003e\u003c/div\u003e\n\u003cdiv class=\"FormDiv\"\u003e标题\u003c/div\u003e\n\n.Cover{\n  background-color: rgb(0, 0, 0);\n  opacity: 0.3;\n  width: 100%;\n  height: 100%;\n  left: 0%;\n  top: 0%;\n  z-index: 100;\n  position: absolute;\n}\n.FormDiv{\n  width: 700px;\n  height: 300px;\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  margin: auto;\n  border: 1px solid black;\n  background:white;\n  padding: 20px 0;\n}\n```\n## 五：transition和transform\n```\n.butt {\n    width: 200px;\n    height: 30px;\n    border: 3px solid #f00;\n    background-color: #999;\n    transition: transform 400ms;\n}\n.butt:hover {\n    transform: scale(0.8,0.8);\n}\n\n\u003cdiv class=\"butt\"\u003ebutton\u003c/div\u003e\n```\n运行效果如此链接首页的标签效果：sunblog\n\n可见，transform只是转换效果动作，transition用于设置该transform运行的时间等，个人觉得是过程。![index.jpg](http://www.sunq.xyz:8888/index.jpg)","CreateDate":"2018-12-05T12:03:29.026Z","ArticleTag":"前端开发","ArticleCover":"http://www.sunq.xyz:8888/html5+css3.jpg","Token":"eyJkYXRhIjp7fSwiY3JlYXRlZCI6MTU0NDAxMTM3MiwiZXhwIjozNjAwfQ==.rY0D51lXZgoj3Cy9/mmv+2XcVkaykDvAsz1I9+42Srs=","CommentNum":0}
{"_id":{"$oid":"5c0a0a494af9be0efc34f2f8"},"Title":"Vue.js中组件间的数据传输与通信","Summary":"组件化开发的好处不言而喻，下面归纳了Vue.js中组件的通讯","Content":"## 一：兄弟组件间的数据通信\n\n组件使用过程中我们发现，Loading、Tips组件的显隐设置，Topbar组件的高亮切换等操作，不是由这些组件自己控制的，是要在同级或者说兄弟组件中控制的。\n\nLoading这些组件需要别的组件向它们传输数据，然后Loading内部根据这些数据实现功能。这样Loading等就需要全局性的暴露或者说监听一个方法，其兄弟组件就可以向该全局方法传递参数，实现通讯。\n\n\n第一步：声明一个各组件都能操作到的公共实例\n\n    在main.js中声明一个bus实例：Vue.prototype.bus = new Vue\n\n第二步：被操作组件用$on监听一个方法\n\n    data(){\n        return{\n            Loading:false\n        }\n    },\n    created(){\n        var That = this;\n        this.bus.$on('Loading',function (data) {\n            That.Loading = !!data;\n        })\n    }\n\n第三步：兄弟组件通过$emit传递数据\n\n    this.bus.$emit('Loading',true);\n\n## 二：父子组件间的数据通信\n\n#### 1.父组件向子组件传值\n\n父组件在摸板中，像使用自定义标签调用子组件时，将变量放在子组件上，这样自动就传给子组件内部了。\n\n    \u003cPagination v-bind:Pagination=this.Pagination\n                 v-bind:PageTotalNum=this.PageTotalNum             \n                 v-bind:PageNum=this.PageNum\u003e\n    \u003c/Pagination\u003e\n\n子组件内部需要声明props参数，并且这些参数就不用声明直接在模板中使用了。\n\n    export default {\n      props:['Pagination','PageTotalNum','PageNum']\n    }\n\n#### 2.子组件给父组件传值\n\n子组件发送：\n\n    That.$emit('PaginationToParent',SelectPage);\n\n父组件接收：\n\n首先摸板中调用子组件时，绑定v-on方法，与子组件发送的第一个参数一致。\n\n    \u003cPagination v-on:PaginationToParent=\"ValueByPagition\" \u003e\u003c/Pagination\u003e\n\n并且什么ValueByPagition方法，这个方法接受的参数就是子组件$emit方法中第二个参数\n\n    methods:{   \n      ValueByPagition :function(SelectPage){\n        console.log(SelectPage);//此变量就是子组件$emit方法中第二个参数\n      }\n    }\n#### 3：父组件操作子组件方法\n子组件中，定义方法：\n```\nexport default {\n    name: \"Pagination\",\n    methods: {\n      SwitchPagin:function (bool) {\n        this.Pagination = bool;\n        this.PageActive = 0;\n      }\n    }\n}\n```\n\n\n\n父组件中，直接根据ref定位，调用方法即可：\n```\n\u003cPagination ref=\"Pagination\"\u003e\u003c/Pagination \u003e\n\nThat.$refs.Pagination.SwitchPagin(true);\n```","CreateDate":"2018-12-07T05:49:52.779Z","ArticleTag":"前端开发","ArticleCover":"http://www.sunq.xyz:8888/u=3040056578,430434464\u0026fm=26\u0026gp=0.jpg","Token":"eyJkYXRhIjp7fSwiY3JlYXRlZCI6MTU0NDE1OTM1NSwiZXhwIjozNjAwfQ==.C+gok2sj+fX6QI2eqrbHUClov+X/AfYwSOLal+RwB0c=","CommentNum":0}
{"_id":{"$oid":"5c109a9c7ef7b70eb03b9704"},"Title":"上拉记载更多","Summary":"上拉加载更多是移动端常用组件，方便优雅，代码实现上也比传统分页器更便捷。","Content":"\u0026emsp;\u0026emsp;本博客的开发一直遵循先解决有没有，再解决好不好的思路。所有功能、设计、页面上都以最简形式先实现，后期再迭代。刚开始写分页功能，也没多想就用了传统分页。传统分页器用了一段时间，后来内容多一些，觉得还是上拉加载比较时尚方便，于是又将分页器替换为上拉加载。\n\n\u0026emsp;\u0026emsp;我的效果在本博客首页就能看到，形式极简。大致思路是先写一个上拉加载子组件，需要用上拉加载的父页面再调用这个子组件。\n\n\u0026emsp;\u0026emsp;子组件中用onScroll监听鼠标事件，纵向滚动轴滑到底部后，子组件会调用父组件方法来请求列表接口请求对应数据。\n\n\u0026emsp;\u0026emsp;父组件请求接口方法中，发现数据已加载完毕，则操作子组件属性，停下子组件对滚动的监听。即可实现最简版的上拉加载更多# 一级标题。\n\n子组件所有代码如下：\n```\n\u003ctemplate\u003e\n    \u003cdiv\u003e\u003c/div\u003e\n\u003c/template\u003e\n\n\u003cscript\u003e\n  export default {\n    name: \"Pagination\",\n    data:function () {\n      return{\n        OnScroll:true\n      }\n    },\n    methods: {\n        SetUpdate:function (Value) {\n          this.OnScroll = Value;\n        }\n    },\n    created:function(){\n      var RefreshCount = 0, That = this;\n\n      window.addEventListener('scroll',()=\u003e{\n        var ScrollTop,ClientHeight,ScrollHeight;\n        // safari要求 document.body.scrollTop\n        ScrollTop = document.documentElement.scrollTop || document.body.scrollTop;\n        ClientHeight = document.documentElement.clientHeight;\n        ScrollHeight = document.documentElement.scrollHeight;\n\n        if(ScrollHeight - ScrollTop - ClientHeight \u003c 130 \u0026\u0026 That.OnScroll){\n          That.OnScroll = false;\n          RefreshCount += 1;\n          That.$emit('PaginationToParent',RefreshCount);\n        }\n      })\n    },\n  }\n\u003c/script\u003e\n\n```\n\n\n父组件调用代码如下：\n```\n\u003ctemplate\u003e\n  \u003cPagination v-on:PaginationToParent=\"ValueByPagition\" ref=\"Pagi\"\u003e\u003c/Pagination\u003e\n\u003c/template\u003e\n```\n\n```\nexport default {\n    methods: {\u0009\n      ValueByPagition:function (SelectPage) {\n        var That = this;\n        this.SQFrontAjax({\n            Url: '/api/MessageRead/foreend',\n            UploadData: {\n              PagnationData: {\n                  Skip:SelectPage * 8,\n                  Limit:8\n                }\n            },\n            Success: function (data) {\n              data.forEach(function (Item) {\n                Item.MessageLeaveDate = That.DateFormat(Item.MessageLeaveDate);\n              });\n              That.MessageList = That.MessageList.concat(data);\n              if(data.length != 8){\n                That.AticleBottom = true;\n                // 停止分页器的滚动监听\n                That.$refs.Pagi.SetUpdate(false);\n              }else {\n                That.$refs.Pagi.SetUpdate(true);\n              }\n            }\n      });\n    }\n}\n```","CreateDate":"2018-12-12T05:09:19.095Z","ArticleTag":"前端开发","ArticleCover":"http://www.sunq.xyz:8888/上拉加载更多.jpg","Token":"eyJkYXRhIjp7fSwiY3JlYXRlZCI6MTU0NDU5MTE1OCwiZXhwIjozNjAwfQ==.2k0l/9gKvDFtDMcjNeFd9MwPFkrcqDK0Dzmo4PwCxN4=","CommentNum":0}
{"_id":{"$oid":"5c16178623c1400eb8d42f0b"},"Title":"纪录片中国通史观后感","Summary":"今天中国通史快看完了，觉得看的过程中有许多感受和触动记录，总结一下共勉","Content":"\u0026emsp;\u0026emsp;上学时总是学历史，但那时候不能静下心来理解，遂看不懂其中的含义。不知道精彩在哪，也就死记硬背应付考试了，所以长大后对历史没有什么认知。\n\n\u0026emsp;\u0026emsp;这人上点岁数很多认知和观念都会发生变化，兴趣爱好也是。内心中慢慢的对中国历史这块未知的领域感到挺好奇，可是还是贪玩所以也只是好奇而已。近几个月，因为在公司旁边的员工宿舍住，所以每天中午可以在宿舍吃饭，还能在宿舍午休。吃饭期间喜欢看个视频，于是在哔哩哔哩上看中国通史纪录片。\n\n刚开始觉得太远的那些历史先民们肯定愚昧无知，没啥意思。看过康熙王朝、雍正王朝这些贼精彩的影视剧，折服于这些充满智慧、贤明睿智的千古一帝，所以就怀着崇拜的心情从明清开始看。\n\n\u0026emsp;\u0026emsp;看到英明的君主亦或开国的英雄时不禁惊呼伟大，看到屈辱到底的宋朝不禁叹息，看到闭关锁国刚愎自用的清朝晚期不禁怒骂。唐宋元明清及近代史就是这样调动着我的情绪，带给我满足好奇时的愉悦感，炒鸡开心。可是慢慢的这些'近代史'还是在我的不舍中给看完了。\n\n\u0026emsp;\u0026emsp;看完‘近代史’后中午饭间百无聊赖，于是不情愿的开始看远一点的历史。先从有点好奇的战国七雄开始，倒着看春秋时期、然后商周时期。中间找到了乐趣，又开始补秦汉历史。\n\n\u0026emsp;\u0026emsp;怀着鄙夷的态度看战国七雄时发现，哇塞，我确实是个傻子！我们的先祖在那么远古的时期就已经充满智慧了，根本就不是我认知中的愚昧无知、尚未开化。\n\n\u0026emsp;\u0026emsp;春秋战国时各个诸侯国此消彼长、相互学习，求贤若渴、千金买马骨，各个厉兵秣马、改革图新，异常精彩。有能取得辉煌进步而不骄傲奢淫的诸侯国如秦国，有失去一切跌入低谷但不放弃卧薪尝胆的诸侯如越王。\n\n\u0026emsp;\u0026emsp;春秋初期，当时的中原一霸齐国旺极一时。但别的诸侯国默默用力，专注于自身，剖析自己改革图新，随后风水轮流装，相继又出现宋襄公、晋文公、秦穆公和楚庄王等各个霸主。这让想来不够自信的自己好像明白了一些东西，让我觉得不再害怕权威，坚信只要自己不断改进、坚持不懈，我也能做到自己当前崇拜的那些大神。我也可以把我的博客开发成日PV破千的精良博客，超过我当下崇拜的网站。我也可以经过努力去进入我向往的公司，做专业的程序员。\n\n\u0026emsp;\u0026emsp;看过历史上那么多时期通过改革都能获得发展，让我觉得我也应该改革也可以吸收新的思想，多做尝试。所以生活上我更换发型，选不同的穿衣风格，尝试不同的生活习惯。看过那么多不畏权贵、无薪尝胆，突破阶级的英雄，我开始相信自己也可以做自己崇拜的那些人，所以我开始勤奋学习、严格律己...\n","CreateDate":"2018-12-16T09:08:51.679Z","ArticleTag":"成长感悟","ArticleCover":"http://www.sunq.xyz:8888/index.jpg","Token":"eyJkYXRhIjp7fSwiY3JlYXRlZCI6MTU0NDk1MTI5MywiZXhwIjozNjAwfQ==.egX5l5NnkpKC/sQCt8tFcMAy1MAlgL5h9Tu8+qNIq7I=","CommentNum":2}
{"_id":{"$oid":"5c1702c623c1400eb8d42f10"},"Title":"表情包组件(vue)","Summary":"想在留言和评论时使用表情包，于是在npm找个现成的组件用。后来看看还是自己写一个好了","Content":"其实很早都想在博客的留言和评论处使用表情包，奈何博客需要完善的地方太多。于是一直推到了这几天，具体实现效果在[博客](博客)上可以看到。\n\n在网上查了下，发现微信官方的表情包对外开放。具体规则想如下，于是就有了思路\n```\nvar EmotionList = ['微笑', '撇嘴', '色'];//改数组没有写完全\n\u003cimg src=\"https://res.wx.qq.com/mpres/htmledition/images/icon/emotion/0.gif\"\u003e//微笑对应的动图\n\u003cimg src=\"https://res.wx.qq.com/mpres/htmledition/images/icon/emotion/1.gif\"\u003e//撇嘴对应的动图\n\u003cimg src=\"https://res.wx.qq.com/mpres/htmledition/images/icon/emotion/2.gif\"\u003e//色对应的动图\n```\n\n我的思路是将表情包组件做成一个子组件，在需要使用表情包的父组件里使用。\n\n首先父组件的input周围，比如留言框后会有个表情包弹框按钮。点击该按钮会弹出表情包弹框，选择表情后弹框关闭，留言框中追加进表情文字，如[[微笑]]。在form submit时，正则匹配出textarea里的像'[[微笑]]'这些字段，替换成\u003cimg https://res.wx.qq.com/mpres/htmledition/images/icon/emotion/0.gif\u003e，然后正常上传后端接口即可。最后前端展示留言的列表展示留言文本为html格式即可。\n\n具体子父组件间交互是这样的。当父组件点击表情弹框按钮时，父组件通过Dom直接操作子组件属性，使表情弹框弹出。选择好某个表情后，表情弹框关闭，这半步在子组件内部可直接操作，无需子父交互。选中表情关闭弹框的同时还要通知父组件（emit）将选中表情的汉字追加在输入框中。最终父组件提交输入框内容时，正则匹配替换汉字表情为gif动图标签即可。\n\n具体代码如下：\n子组件（表情包）代码如下：\n```\n\u003ctemplate\u003e\n    \u003cdiv class=\"EmoticonListCover\" v-if=\"Show\" @click=\"OpenEmotion(false)\"\u003e\n        \u003cdiv class=\"EmoticonList\"\u003e\n            \u003cdiv class=\"PicItem\" v-for=\"(item,i) in EmotionList\" @click=\"ClickEmoticon(i)\" :key=\"i\"\u003e\n                \u003cimg :src=\" 'https://res.wx.qq.com/mpres/htmledition/images/icon/emotion/' + i + '.gif'\"\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n\u003c/template\u003e\n\n\u003cscript\u003e\n  export default {\n    name: \"Emotion\",\n    data:function(){\n      return {\n        Show:false,\n        EmotionList:['微笑', '撇嘴', '色', '发呆', '得意', '流泪', '害羞', '闭嘴', '睡', '大哭',\n          '尴尬', '发怒', '调皮', '呲牙', '惊讶', '难过', '酷', '冷汗', '抓狂', '吐', '偷笑', '可爱',\n          '白眼', '傲慢', '饥饿', '困', '惊恐', '流汗', '憨笑', '大兵', '奋斗', '咒骂', '疑问', '嘘',\n          '晕', '折磨', '衰', '骷髅', '敲打', '再见', '擦汗', '抠鼻', '鼓掌', '糗大了', '坏笑', '左哼哼',\n          '右哼哼', '哈欠', '鄙视', '委屈', '快哭了', '阴险', '亲亲', '吓', '可怜', '菜刀', '西瓜', '啤酒',\n          '篮球', '乒乓', '咖啡', '饭', '猪头', '玫瑰', '凋谢', '示爱', '爱心', '心碎', '蛋糕', '闪电', '炸弹',\n          '刀', '足球', '瓢虫', '便便', '月亮', '太阳', '礼物', '拥抱', '强', '弱', '握手', '胜利', '抱拳', '勾引',\n          '拳头', '差劲', '爱你', 'NO', 'OK', '爱情', '飞吻', '跳跳', '发抖', '怄火', '转圈', '磕头', '回头', '跳绳', '挥手',\n          '激动', '街舞', '献吻', '左太极', '右太极'],\n      }\n    },\n    methods:{\n      //选中表情\n      ClickEmoticon:function (EmoticonNo) {\n        var That = this;\n        That.Show = false;\n        That.$emit('AppendInputValue','[[' + That.EmotionList[EmoticonNo] + ']]');\n      },\n      OpenEmotion:function (Value) {\n        this.Show = Value;\n      }\n    }\n  }\n\u003c/script\u003e\n```\n\n父组件使用如下：\n```\n\u003ctemplate\u003e\n  /*表情弹框打开按钮*/\n  \u003cspan class=\"EmotionButton\" @click=\"OpenEmotions()\"\u003e\n    \u003ci class=\"iconfont icon-face IconfontSize\"\u003e\u003c/i\u003e\n  \u003c/span\u003e\n\n  \u003cEmotion ref=\"EmotionB\" @AppendInputValue=\"AppendMessageText\"\u003e\u003c/Emotion\u003e\n\u003c/template\u003e\n\nexport default {\n    name: \"BlogDetail\",\n    methods:{\n       // 打开表情包弹框\n       OpenEmotions:function () {\n         this.$refs.EmotionB.OpenEmotion(true);\n       },\n       //表情选中后追加在input\n       AppendMessageText:function (EmotionChinese) {\n         this.ArticleCommentText += EmotionChinese;\n       }\n    }\n}\n```\n\n代码详见github，[博客Github](https://github.com/SunQQQ)","CreateDate":"2018-12-17T01:54:25.307Z","ArticleTag":"技术笔记","ArticleCover":"http://www.sunq.xyz:8888/1545011920(1).jpg","Token":"eyJkYXRhIjp7fSwiY3JlYXRlZCI6MTU0NTAxMTE1MiwiZXhwIjozNjAwfQ==.A5082TD4uSRYmpKvopADeazoX0hEkFThkAiT3gMNJh4=","CommentNum":5}
{"_id":{"$oid":"5c21ce8223c1400eb8d42f20"},"Title":"WebStorm FTP连接及自动同步","Summary":"前后端分离开发时，前后端都直接修改服务器上代码，也是一种开发方式。这是就涉及到FTP连接及自动同步","Content":"# 一：FTP连接\n![FTPConnect1.jpg](http://www.sunq.xyz:8888/FTPConnect1.jpg)\n\n![FTPConnect2.jpg](http://www.sunq.xyz:8888/FTPConnect2.jpg)\n\n![FTPConnect3.jpg](http://www.sunq.xyz:8888/FTPConnect3.jpg)\n\n![FTPConnect24.jpg](http://www.sunq.xyz:8888/FTPConnect24.jpg)\n\n![FTPConnect5.jpg](http://www.sunq.xyz:8888/FTPConnect5.jpg)\n\n![FTPConnect6.jpg](http://www.sunq.xyz:8888/FTPConnect6.jpg)\n\n# 二：自动同步\n\n![FTPConnect7.jpg](http://www.sunq.xyz:8888/FTPConnect7.jpg)\n\n2、找到webstorm菜单栏中的，Tools-\u003eDeployment-\u003eOptions\n\n3、在 Upload changed files automatically to the default server 后选择 Always，这样在你修改完文件后就可以实现自动上传了\n\n4、勾选上 Upload external changes ，可以实现本地增加或修改的文件自动上传服务器的效果。\n\n![FTPConnect8.jpg](http://www.sunq.xyz:8888/FTPConnect8.jpg)","CreateDate":"2018-12-25T06:20:53.097Z","ArticleTag":"技术笔记","ArticleCover":"http://www.sunq.xyz:8888/WebstormFTP.jpg","Token":"eyJkYXRhIjp7fSwiY3JlYXRlZCI6MTU0NTcxODgxMywiZXhwIjozNjAwfQ==.zLhYeZuAaH0r7mqijH+NCqHfLohxK34BxnsGb3ZPoRE=","CommentNum":14}
